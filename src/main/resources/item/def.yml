item_intensify_sword:
  display: display_weapon
  icon: GOLDEN_SWORD
  name:
    NAME: '&eIntensify Sword'
  lore:
    TYPE: '&9Sword'
    LORE:
      - '&6An indestructible golden sword.'
    meta:
      itemflag:
        - HIDE_UNBREAKABLE
      unbreakable: true
    data:
      weight: 0.45

item_wooden_sword:
  display: display_weapon
  icon: WOODEN_SWORD
  name:
    NAME: '&7Wooden Sword'
  lore:
    TYPE: '&9Sword'
    LORE:
      - '&fCan be bought everywhere.'
    meta:
      attribute:
        mainhand:
          damage: +7
          attackspeed: +10%
    data:
      weight: 0.25
      durability!!: 127
  event:
    onDamage: |-
      event.setCancelled(true)
      api.toRepair(-1)
      api.save()

item_enchanted_book:
  display: display_item
  icon: ENCHANTED_BOOK
  name:
    NAME: '&7Enchanted Book'
  lore:
    TYPE: '&9Item'
    LORE:
      - '&fCan be bought everywhere.'
  meta:
    enchantment:
      durability: 1
  data:
    weight: 0.10

item_slowness_potion:
  display: display_item
  icon: POTION
  name:
    NAME: '&7Slowness Potion'
  lore:
    TYPE: '&9Potion'
    LORE:
      - '&fCan be bought everywhere.'
  meta:
    potion:
      slowness: 1-60
  data:
    weight: 0.01

item_leather_armor:
  display: display_armor
  icon: LEATHER_CHESTPLATE
  name:
    NAME: '&7Leather Armor'
  lore:
    TYPE: '&9Armor'
    LORE:
      - '&fCan be bought everywhere.'
  meta:
    color: 255-255-255
  data:
    weight: 0.50
    durability!!: 100

item_rotten_flesh:
  display: display_consumable
  icon: ROTTEN_FLESH
  name:
    NAME: '&7Rotten Flesh'
  lore:
    TYPE: '&9Food'
    LORE:
      - '&fRipped flesh from black sheep.'
  data:
    weight: 0.01
    durability!!: 3
  event:
    from: base_food
    data:
      cooldown: 100
      regain_health: 1
      regain_hunger: 2

base_food$:
  event:
    onConsume: |-
      if (api.isCooldown()) {
          event.setCancelled(true)
          event.getPlayer().sendMessage("§cYou are temporarily unable to use it.")
      } else {
          event.setCancelled(true)
          event.getPlayer().sendMessage("§7Your health and satiety have recovered.")
          event.getPlayer().setHealth(Math.min(event.getPlayer().getHealth() + regain_health, event.getPlayer().getMaxHealth()))
          event.getPlayer().setFoodLevel(Math.min(event.getPlayer().getFoodLevel() + regain_hunger, 20))
          api.toCooldown(cooldown)
          api.toRepair(-1)
          api.save()
      }